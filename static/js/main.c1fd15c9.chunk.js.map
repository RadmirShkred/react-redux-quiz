{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","Open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","this","close","renderLinks","map","link","index","key","activeClassName","active","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","Spinner","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","console","log","QuizWrapper","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","QuizList","fetchQuizes","renderQuizes","name","connect","dispatch","a","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","authData","returnSecureToken","post","registerHandler","submitHandler","preventDefault","validateControl","isValid","trim","is","onChangeHandler","controlName","control","target","onSubmit","AuthForm","renderInputs","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","event","select","renderControls","App","path","component","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,mBCAzFD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,mBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,mBCA5GD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,MAAQ,8B,mBCApHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,0B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,2MCwBZC,EAtBI,SAAAC,GAEf,IAAMC,EAAM,CACRC,IAAQH,WACR,MAUJ,OAPIC,EAAMG,QACNF,EAAIG,KAAK,YACTH,EAAIG,KAAKF,IAAQG,OAEjBJ,EAAIG,KAAK,WAIT,uBACIE,UAAWL,EAAIM,KAAK,KACpBC,QAASR,EAAMS,Y,kCCfZC,EAFE,SAAAV,GAAK,OAAI,yBAAKM,UAAWJ,IAAQQ,SAAUF,QAASR,EAAMQ,SAAjD,M,QCEpBG,EAAQ,CACV,CAACC,GAAI,IAAKC,MAAO,uCAAUC,OAAO,GAClC,CAACF,GAAI,QAASC,MAAO,qEAAeC,OAAO,GAC3C,CAACF,GAAI,gBAAiBC,MAAO,sEAAgBC,OAAO,IAGnCC,E,4MACjBC,aAAe,WACX,EAAKhB,MAAMiB,W,uDAMX,IAAMhB,EAAM,CACRC,IAAQa,QAOZ,OAJKG,KAAKlB,MAAMG,QACZF,EAAIG,KAAKF,IAAQiB,OAIjB,oCACI,yBAAKb,UAAWL,EAAIM,KAAK,MACrB,4BACKW,KAAKE,gBAGbF,KAAKlB,MAAMG,OAAS,kBAAC,EAAD,CAAUK,QAASU,KAAKlB,MAAMiB,UAAa,Q,oCAK7D,IAAD,OACV,OAAON,EAAMU,KAAI,SAACC,EAAMC,GACpB,OAAQ,wBAAIC,IAAKD,GACb,kBAAC,IAAD,CACIX,GAAIU,EAAKV,GACTE,MAAOQ,EAAKR,MACZW,gBAAiBvB,IAAQwB,OACzBlB,QAAS,EAAKQ,cAEbM,EAAKT,e,GArCUc,aCNfC,E,4MAEjBC,MAAQ,CACJC,MAAM,G,EAGVC,kBAAoB,WAChB,EAAKC,SAAS,CACVF,MAAO,EAAKD,MAAMC,Q,EAG1BG,iBAAmB,WACf,EAAKD,SAAS,CAACF,MAAM,K,uDAIrB,OACI,yBAAKxB,UAAWJ,IAAQ0B,QAEpB,kBAAC,EAAD,CACIzB,OAAQe,KAAKW,MAAMC,KACnBb,QAASC,KAAKe,mBAGlB,kBAAC,EAAD,CACIxB,SAAUS,KAAKa,kBACf5B,OAAQe,KAAKW,MAAMC,OAGvB,8BACKZ,KAAKlB,MAAMkC,e,GA9BIP,a,4GCcrBQ,EAhBI,SAAAnC,GAEf,IAAMC,EAAM,CAACC,IAAQiC,YAMrB,OAJInC,EAAM6B,OACN5B,EAAIG,KAAKF,IAAQF,EAAM6B,QAIvB,wBAAIvB,UAAWL,EAAIM,KAAK,KACpBC,QAAS,kBAAMR,EAAMoC,cAAcpC,EAAMqC,OAAOC,MAC/CtC,EAAMqC,OAAOE,OCIXC,EAdK,SAAAxC,GAAK,OACrB,wBAAIM,UAAWJ,IAAQsC,aAClBxC,EAAMyC,QAAQpB,KAAI,SAACgB,EAAQd,GACxB,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLc,OAAQA,EACRR,MAAO7B,EAAM6B,MAAQ7B,EAAM6B,MAAMQ,EAAOC,IAAM,KAC9CF,cAAepC,EAAMoC,qBCU1BM,EAlBI,SAAA1C,GACf,OACI,yBAAKM,UAAWJ,IAAQwC,YACpB,uBAAGpC,UAAWJ,IAAQyC,UAClB,8BACI,gCAAS3C,EAAM4C,aAAf,KADJ,OAEK5C,EAAM6C,UAEX,+BAAQ7C,EAAM4C,aAAd,iBAAgC5C,EAAM8C,aAE1C,kBAAC,EAAD,CACIjB,MAAO7B,EAAM6B,MACbY,QAASzC,EAAMyC,QACfL,cAAepC,EAAMoC,kB,kCCItBW,EAlBA,SAAA/C,GAEX,IAAMC,EAAM,CACRC,IAAQ6C,OACR7C,IAAQF,EAAMgD,OAGlB,OACI,4BACI1C,UAAWL,EAAIM,KAAK,KACpBC,QAASR,EAAMQ,QACfyC,SAAUjD,EAAMiD,UAEfjD,EAAMkC,WCuBJgB,EAlCM,SAAAlD,GACjB,IAAMmD,EAAeC,OAAOC,KAAKrD,EAAMsD,SAASC,QAAO,SAACC,EAAOhC,GAI3D,MAH2B,YAAvBxB,EAAMsD,QAAQ9B,IACdgC,IAEGA,IACR,GACH,OACI,yBAAKlD,UAAWJ,IAAQgD,cACpB,4BACKlD,EAAMyD,KAAKpC,KAAI,SAACqC,EAAUnC,GACvB,IAAMtB,EAAM,CACR,KAC+B,UAA/BD,EAAMsD,QAAQI,EAASpB,IAAkB,WAAa,WACtDpC,IAAQF,EAAMsD,QAAQI,EAASpB,MAEnC,OACI,wBAAId,IAAKD,GACL,gCAASA,EAAQ,GADrB,QAEKmC,EAASb,SACV,uBAAGvC,UAAWL,EAAIM,KAAK,YAKvC,qFAAc4C,EAAd,iBAAgCnD,EAAMyD,KAAKE,QAC3C,6BACI,kBAAC,EAAD,CAAQnD,QAASR,EAAM4D,QAASZ,KAAK,WAArC,0DACA,kBAAC,IAAD,CAAMpC,GAAG,KAAI,kBAAC,EAAD,CAAQoC,KAAK,WAAb,mI,iBC/Bda,MAAMC,OAAO,CACxBC,QAAS,6C,iBCeEC,EAfA,SAAAhE,GAAK,OAChB,yBAAKM,UAAWJ,IAAQ+D,SACpB,yBAAK3D,UAAWJ,IAAQ8D,QACpB,8BACA,8BACA,6BACI,+BAEJ,6BACI,kCC2GDE,E,4MA/GbrC,MAAQ,CACNyB,QAAS,GACTa,YAAY,EACZC,eAAgB,EAChBC,YAAa,KACbZ,KAAM,GACNa,SAAS,G,EAGXC,qBAAuB,SAAAC,GACrB,GAAI,EAAK3C,MAAMwC,YAAa,CAC1B,IAAM7C,EAAM4B,OAAOC,KAAK,EAAKxB,MAAMwC,aAAa,GAChD,GAAoC,YAAhC,EAAKxC,MAAMwC,YAAY7C,GACzB,OAIJ,IAAMqB,EAAW,EAAKhB,MAAM4B,KAAK,EAAK5B,MAAMuC,gBACtCd,EAAU,EAAKzB,MAAMyB,QAE3B,GAAIT,EAAS4B,gBAAkBD,EAAU,CAClClB,EAAQT,EAASP,MACpBgB,EAAQT,EAASP,IAAM,WAGzB,EAAKN,SAAS,CACZqC,YAAY,eAAGG,EAAW,WAC1BlB,YAGF,IAAMoB,EAAUC,OAAOC,YAAW,WAC5B,EAAKC,iBACP,EAAK7C,SAAS,CACZmC,YAAY,IAGd,EAAKnC,SAAS,CACZoC,eAAgB,EAAKvC,MAAMuC,eAAiB,EAC5CC,YAAa,OAGjBM,OAAOG,aAAaJ,KACnB,UAEHpB,EAAQT,EAASP,IAAM,QACvB,EAAKN,SAAS,CACZqC,YAAY,eAAGG,EAAW,SAC1BlB,a,EASNyB,aAAe,WACb,EAAK/C,SAAS,CACZoC,eAAgB,EAChBC,YAAa,KACbF,YAAY,EACZb,QAAS,M,+DARX,OAAOpC,KAAKW,MAAMuC,eAAiB,IAAMlD,KAAKW,MAAM4B,KAAKE,S,qLAchCE,EAAMmB,IAAN,kBAAqB9D,KAAKlB,MAAMiF,MAAMC,OAAO5C,GAA7C,U,OAAjB6C,E,OACA1B,EAAO0B,EAASC,KAEtBlE,KAAKc,SAAS,CACZyB,OACAa,SAAS,I,gDAGXe,QAAQC,IAAR,M,8IAKF,OACE,yBAAKhF,UAAWJ,IAAQgE,MACtB,yBAAK5D,UAAWJ,IAAQqF,aACtB,2JAGErE,KAAKW,MAAMyC,QACR,kBAAC,EAAD,MACApD,KAAKW,MAAMsC,WACV,kBAAC,EAAD,CACAb,QAASpC,KAAKW,MAAMyB,QACpBG,KAAMvC,KAAKW,MAAM4B,KACjBG,QAAS1C,KAAK6D,eAEd,kBAAC,EAAD,CACAtC,QAASvB,KAAKW,MAAM4B,KAAKvC,KAAKW,MAAMuC,gBAAgB3B,QACpDI,SAAU3B,KAAKW,MAAM4B,KAAKvC,KAAKW,MAAMuC,gBAAgBvB,SACrDT,cAAelB,KAAKqD,qBACpBzB,WAAY5B,KAAKW,MAAM4B,KAAKE,OAC5Bf,aAAc1B,KAAKW,MAAMuC,eAAiB,EAC1CvC,MAAOX,KAAKW,MAAMwC,oB,GArGf1C,a,6BC0CZ,SAAS6D,GAAmBC,GAC/B,MAAO,CACHzC,KClD4B,uBDmD5ByC,UAKD,SAASC,GAAiBC,GAC7B,MAAO,CACH3C,KCzD0B,qBD0D1B4C,MAAOD,G,IErDTE,G,4RAGE3E,KAAKlB,MAAM8F,c,qIAIX,OACI,yBAAKxF,UAAWJ,KAAQ2F,UACpB,6BACI,yGAGI3E,KAAKlB,MAAMsE,SAAwC,IAA7BpD,KAAKlB,MAAMyF,OAAO9B,OAClC,kBAAC,EAAD,MACA,4BACGzC,KAAK6E,oB,qCAS9B,OAAO7E,KAAKlB,MAAMyF,OAAOpE,KAAI,SAAAoC,GACzB,OACI,wBACIjC,IAAKiC,EAAKnB,IAEV,kBAAC,IAAD,CAAS1B,GAAI,SAAW6C,EAAKnB,IACxBmB,EAAKuC,c,GA/BPrE,aAoDRsE,qBAbf,SAAyBpE,GACrB,MAAO,CACH4D,OAAQ5D,EAAM4B,KAAKgC,OACnBnB,QAASzC,EAAM4B,KAAKa,YAI5B,SAA4B4B,GACxB,MAAO,CACHJ,YAAa,kBAAMI,EFnDvB,uCAAO,WAAMA,GAAN,iBAAAC,EAAA,6DACHD,EAkBG,CACHlD,KCxB0B,uBDIvB,kBAGwBa,EAAMmB,IAAI,gBAHlC,OAGOG,EAHP,OAIOM,EAAS,GACfrC,OAAOC,KAAK8B,EAASC,MAAMgB,SAAQ,SAAC5E,EAAKD,GACrCkE,EAAOrF,KAAK,CACRkC,GAAId,EACJwE,KAAK,kCAAD,OAAWzE,EAAQ,QAG/B2E,EAASV,GAAmBC,IAX7B,kDAaCS,EAASR,GAAiB,EAAD,KAb1B,0DAAP,2DEuDWO,CAA6CJ,I,gDCxD5D,SAASQ,GAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAChC,OAAQF,GAASE,GAAkBD,EAGvC,IA2BeE,GA3BD,SAAAzG,GAEV,IAAM0G,EAAY1G,EAAMgD,MAAQ,OAC1B/C,EAAM,CAACC,KAAQuG,OACfE,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMrC,OAJIR,GAAUrG,IACVC,EAAIG,KAAKF,KAAQ4G,SAIjB,yBAAKxG,UAAWL,EAAIM,KAAK,MACrB,2BAAOoG,QAASA,GAAU3G,EAAMa,OAChC,2BAAOmC,KAAM0D,EACNpE,GAAIqE,EACJI,MAAO/G,EAAM+G,MACbC,SAAUhH,EAAMgH,WAGtBX,GAAUrG,GACL,8BAAOA,EAAMiH,cAAgB,oIAC7B,O,oBCsIHC,G,4MAzJXrF,MAAQ,CACJsF,aAAa,EACbC,aAAc,CACVC,MAAO,CACHN,MAAO,GACP/D,KAAM,QACNnC,MAAO,QACPoG,aAAc,gHACdX,OAAO,EACPC,SAAS,EACTe,WAAY,CACRC,UAAU,EACVF,OAAO,IAGfG,SAAU,CACNT,MAAO,GACP/D,KAAM,WACNnC,MAAO,uCACPoG,aAAc,+IACdX,OAAO,EACPC,SAAS,EACTe,WAAY,CACRC,UAAU,EACVE,UAAW,M,EAM3BC,a,sBAAe,8BAAAvB,EAAA,6DACLwB,EAAW,CACbN,MAAO,EAAKxF,MAAMuF,aAAaC,MAAMN,MACrCS,SAAU,EAAK3F,MAAMuF,aAAaI,SAAST,MAC3Ca,mBAAmB,GAJZ,kBAQgB/D,IAAMgE,KAAK,oHAAqHF,GARhJ,OAQDxC,EARC,OASPE,QAAQC,IAAIH,EAASC,MATd,gDAWPC,QAAQC,IAAR,MAXO,yD,EAcfwC,gB,sBAAkB,8BAAA3B,EAAA,6DACRwB,EAAW,CACbN,MAAO,EAAKxF,MAAMuF,aAAaC,MAAMN,MACrCS,SAAU,EAAK3F,MAAMuF,aAAaI,SAAST,MAC3Ca,mBAAmB,GAJT,kBAQa/D,IAAMgE,KAAK,wGAAyGF,GARjI,OAQJxC,EARI,OASVE,QAAQC,IAAIH,EAASC,MATX,gDAWVC,QAAQC,IAAR,MAXU,yD,EAclByC,cAAgB,SAAApC,GACZA,EAAEqC,kB,EAGNC,gBAAkB,SAAClB,EAAOO,GACtB,IAAKA,EACD,OAAO,EAGX,IAAIY,GAAU,EAWd,OATIZ,EAAWC,WACXW,EAA2B,KAAjBnB,EAAMoB,QAAiBD,GAEjCZ,EAAWD,QACXa,EAAUE,KAAGf,MAAMN,IAAUmB,GAE7BZ,EAAWG,YACXS,EAAUnB,EAAMpD,QAAU2D,EAAWG,WAAaS,GAE/CA,G,EAGXG,gBAAkB,SAAC1C,EAAG2C,GAClB,IAAMlB,EAAY,gBAAO,EAAKvF,MAAMuF,cAC9BmB,EAAO,gBAAOnB,EAAakB,IAEjCC,EAAQxB,MAAQpB,EAAE6C,OAAOzB,MACzBwB,EAAQhC,SAAU,EAClBgC,EAAQjC,MAAQ,EAAK2B,gBAAgBM,EAAQxB,MAAOwB,EAAQjB,YAE5DF,EAAakB,GAAeC,EAE5B,IAAIpB,GAAc,EAElB/D,OAAOC,KAAK+D,GAAchB,SAAQ,SAAAJ,GAC9BmB,EAAcC,EAAapB,GAAMM,OAASa,KAG9C,EAAKnF,SAAS,CACVoF,eAAcD,iB,6DAIN,IAAD,OACX,OAAO/D,OAAOC,KAAKnC,KAAKW,MAAMuF,cAAc/F,KAAI,SAACiH,EAAa/G,GAC1D,IAAMgH,EAAU,EAAK1G,MAAMuF,aAAakB,GACxC,OACI,kBAAC,GAAD,CACI9G,IAAK8G,EAAc/G,EACnByB,KAAMuF,EAAQvF,KACd+D,MAAOwB,EAAQxB,MACfT,MAAOiC,EAAQjC,MACfC,QAASgC,EAAQhC,QACjB1F,MAAO0H,EAAQ1H,MACf2F,iBAAkB+B,EAAQjB,WAC1BL,aAAcsB,EAAQtB,aACtBD,SAAU,SAAArB,GAAC,OAAI,EAAK0C,gBAAgB1C,EAAG2C,W,+BAOnD,OACI,yBAAKhI,UAAWJ,KAAQgH,MACpB,6BACI,kGAEA,0BACIuB,SAAUvH,KAAK6G,cACfzH,UAAWJ,KAAQwI,UAElBxH,KAAKyH,eACN,kBAAC,EAAD,CACI3F,KAAK,UACLxC,QAASU,KAAKwG,aACdzE,UAAW/B,KAAKW,MAAMsF,aAH1B,kCAOA,kBAAC,EAAD,CACInE,KAAK,UACLxC,QAASU,KAAK4G,gBACd7E,UAAW/B,KAAKW,MAAMsF,aAH1B,uH,GA7ILxF,a,oBCPZ,SAASiH,GAAcC,EAAQvB,GAClC,OAAO,6BACAuB,GADP,IAEIvB,aACAhB,OAAQgB,EACRf,SAAS,EACTQ,MAAO,KAIR,SAAS+B,GAAS/B,GAA2B,IAApBO,EAAmB,uDAAN,KACzC,IAAKA,EACD,OAAO,EAGX,IAAIY,GAAU,EAMd,OAJIZ,EAAWC,WACXW,EAA2B,KAAjBnB,EAAMoB,QAAiBD,GAG9BA,EAGJ,SAASa,GAAa3B,GACzB,IAAID,GAAc,EAElB,IAAK,IAAIoB,KAAWnB,EACZA,EAAa4B,eAAeT,KAC5BpB,EAAcC,EAAamB,GAASjC,OAASa,GAIrD,OAAOA,ECjCX,IAEe8B,GAFG,SAAAjJ,GAAK,OAAIA,EAAMkC,U,oBC4BlBgH,GAzBA,SAAAlJ,GACX,IAAM2G,EAAO,UAAM3G,EAAMa,MAAZ,cAAuB+F,KAAKC,UACzC,OACI,yBAAKvG,UAAWJ,KAAQgJ,QACpB,2BAAOvC,QAASA,GAAU3G,EAAMa,OAChC,4BACIyB,GAAIqE,EACJI,MAAO/G,EAAM+G,MACbC,SAAUhH,EAAMgH,UAEfhH,EAAMmJ,QAAQ9H,KAAI,SAAC+H,EAAQ7H,GACxB,OACI,4BACIwF,MAAOqC,EAAOrC,MACdvF,IAAK4H,EAAOrC,MAAQxF,GAEnB6H,EAAO7G,YCVpC,SAAS8G,GAAoBC,GACzB,OAAOV,GAAc,CACjB/H,MAAM,8CAAD,OAAayI,GAClBrC,aAAc,6JACd3E,GAAIgH,GACL,CAAC/B,UAAU,IAGlB,SAASgC,KACL,MAAO,CACH1G,SAAU+F,GAAc,CACpB/H,MAAO,kFACPoG,aAAc,kJACf,CAACM,UAAU,IACdiC,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,GAC7BM,QAASN,GAAoB,I,IA8ItBO,G,4MAxIX/H,MAAQ,CACJ4B,KAAM,GACN0D,aAAa,EACbC,aAAcmC,KACd9E,cAAe,G,EAGnBsD,cAAgB,SAAApC,GACZA,EAAEqC,kB,EAGN6B,mBAAqB,SAAAlE,GACjBA,EAAEqC,iBAEF,IAAMvE,EAAO,EAAK5B,MAAM4B,KAAKqG,SACvBvI,EAAQkC,EAAKE,OAAS,EAJN,EAMiC,EAAK9B,MAAMuF,aAA3DvE,EANe,EAMfA,SAAU2G,EANK,EAMLA,QAASC,EANJ,EAMIA,QAASC,EANb,EAMaA,QAASC,EANtB,EAMsBA,QAEtCI,EAAe,CACjBlH,SAAUA,EAASkE,MACnBzE,GAAIf,EACJkD,cAAe,EAAK5C,MAAM4C,cAC1BhC,QAAS,CACL,CAACF,KAAMiH,EAAQzC,MAAOzE,GAAIkH,EAAQlH,IAClC,CAACC,KAAMkH,EAAQ1C,MAAOzE,GAAImH,EAAQnH,IAClC,CAACC,KAAMmH,EAAQ3C,MAAOzE,GAAIoH,EAAQpH,IAClC,CAACC,KAAMoH,EAAQ5C,MAAOzE,GAAIqH,EAAQrH,MAG1CmB,EAAKrD,KAAK2J,GAEV,EAAK/H,SAAS,CACVyB,OACA0D,aAAa,EACb1C,cAAe,EACf2C,aAAcmC,Q,EAItBS,kB,uCAAoB,WAAMrE,GAAN,SAAAQ,EAAA,6DAChBR,EAAEqC,iBADc,kBAINnE,EAAMgE,KAAK,eAAgB,EAAKhG,MAAM4B,MAJhC,OAKZ,EAAKzB,SAAS,CACVyB,KAAM,GACN0D,aAAa,EACbC,aAAcmC,KACd9E,cAAe,IATP,gDAYZY,QAAQC,IAAR,MAZY,yD,wDAgBpB2E,cAAgB,SAAClD,EAAOuB,GACpB,IAAMlB,EAAY,gBAAO,EAAKvF,MAAMuF,cAC9BmB,EAAO,gBAAOnB,EAAakB,IAEjCC,EAAQhC,SAAU,EAClBgC,EAAQxB,MAAQA,EAChBwB,EAAQjC,MAAQwC,GAASP,EAAQxB,MAAOwB,EAAQjB,YAEhDF,EAAakB,GAAeC,EAE5B,EAAKvG,SAAS,CACVoF,eACAD,YAAa4B,GAAa3B,M,EAwBlC8C,oBAAsB,SAAAvE,GAClB,EAAK3D,SAAS,CAACyC,eAAgBkB,EAAE6C,OAAOzB,S,+DArB1B,IAAD,OACb,OAAO3D,OAAOC,KAAKnC,KAAKW,MAAMuF,cAAc/F,KAAI,SAACiH,EAAa/G,GAC1D,IAAMgH,EAAU,EAAK1G,MAAMuF,aAAakB,GACxC,OACI,kBAAC,GAAD,CAAW9G,IAAK8G,EAAc/G,GAAO,kBAAC,GAAD,CACjCV,MAAO0H,EAAQ1H,MACfkG,MAAOwB,EAAQxB,MACfT,MAAOiC,EAAQjC,MACfE,iBAAkB+B,EAAQjB,WAC1Bf,QAASgC,EAAQhC,QACjBU,aAAcsB,EAAQtB,aACtBD,SAAU,SAAAmD,GAAK,OAAI,EAAKF,cAAcE,EAAM3B,OAAOzB,MAAOuB,MAG5C,IAAV/G,EAAc,6BAAQ,W,+BAWtC,IAAM6I,EAAS,kBAAC,GAAD,CACXvJ,MAAM,+IACNkG,MAAO7F,KAAKW,MAAM4C,cAClBuC,SAAU9F,KAAKgJ,oBACff,QAAS,CACL,CAAC5G,KAAM,EAAGwE,MAAO,GACjB,CAACxE,KAAM,EAAGwE,MAAO,GACjB,CAACxE,KAAM,EAAGwE,MAAO,GACjB,CAACxE,KAAM,EAAGwE,MAAO,MAGzB,OACI,yBAAKzG,UAAWJ,KAAQ0J,aACpB,6BACI,+GACA,0BAAMnB,SAAUvH,KAAK6G,eAChB7G,KAAKmJ,iBACLD,EACD,kBAAC,EAAD,CACIpH,KAAK,UACLxC,QAASU,KAAK2I,mBACd5G,UAAW/B,KAAKW,MAAMsF,aAH1B,yFAOA,kBAAC,EAAD,CACInE,KAAK,UACLxC,QAASU,KAAK8I,kBACd/G,SAAqC,IAA3B/B,KAAKW,MAAM4B,KAAKE,QAH9B,8E,GA5HEhC,aCRX2I,OAbf,WACI,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWtD,KAC/B,kBAAC,IAAD,CAAOqD,KAAK,gBAAgBC,UAAWZ,KACvC,kBAAC,IAAD,CAAOW,KAAK,YAAYC,UAAWtG,IACnC,kBAAC,IAAD,CAAOqG,KAAK,IAAIC,UAAW3E,QCJvB4E,QACW,cAA7B9F,OAAO+F,SAASC,UAEe,UAA7BhG,OAAO+F,SAASC,UAEhBhG,OAAO+F,SAASC,SAAS1F,MACvB,2D,aChBA2F,GAAe,CACjBnF,OAAQ,GACRnB,SAAS,EACTsB,MAAO,KACPtC,QAAS,GACTa,YAAY,EACZC,eAAgB,EAChBC,YAAa,KACbZ,KAAM,MCPKoH,oBAAgB,CAC3BpH,KDSW,WAAoD,IAA/B5B,EAA8B,uDAAtB+I,GAAcE,EAAQ,uCAC9D,OAAQA,EAAO9H,MACX,IVf0B,qBUgBtB,OAAO,6BACAnB,GADP,IAEIyC,SAAS,IAEjB,IVnB4B,uBUoBxB,OAAO,6BACAzC,GADP,IAEIyC,SAAS,EACTmB,OAAQqF,EAAOrF,SAEvB,IVxB0B,qBUyBtB,OAAO,6BACA5D,GADP,IAEIyC,SAAS,EACTsB,MAAOkF,EAAOlF,QAEtB,IV7B0B,qBU8BtB,OAAO,6BACA/D,GADP,IAEIyC,SAAS,EACTb,KAAMqH,EAAOrH,OAGrB,QACI,OAAO5B,M,SE7BbkJ,GACgB,kBAAXpG,QACPA,OAAOqG,qCACHrG,OAAOqG,qCAAqC,IAAMC,KAEtDC,GAAQC,aAAYC,GAAaL,GAAiBM,aAAgBC,QAChEC,GACF,kBAAC,KAAD,CAAUL,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAIZM,IAASC,OAAOF,GAAKG,SAASC,eAAe,SH2GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtG,GACLP,QAAQO,MAAMA,EAAMuG,c","file":"static/js/main.c1fd15c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__pIpWK\",\"close\":\"Drawer_close__3uVVC\",\"active\":\"Drawer_active__KTQdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__36P7x\",\"Open\":\"MenuToggle_Open__3GlCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3DvHH\",\"QuizWrapper\":\"Quiz_QuizWrapper__1_XgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3hpTP\",\"Question\":\"ActiveQuiz_Question__13dT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2qKCU\",\"success\":\"AnswerItem_success__3lO7u\",\"error\":\"AnswerItem_error__3gNJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1TTse\",\"success\":\"FinishedQuiz_success__HbqPE\",\"error\":\"FinishedQuiz_error__2GnDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Zy3k\",\"error\":\"Button_error__13k2l\",\"success\":\"Button_success__2In49\",\"primary\":\"Button_primary__3Z79q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__12IdN\",\"Spinner\":\"Loader_Spinner__1pvVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__fuk6s\",\"AuthForm\":\"Auth_AuthForm__2VBkP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1HTy_\",\"invalid\":\"Input_invalid__3eRJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2DzsV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__BQK9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__x86lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__34hRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3yvBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3Srgy\"};","import React from 'react';\r\nimport classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle = props => {\r\n\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ];\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push(classes.Open);\r\n    } else {\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MenuToggle;\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}> </div>\r\n\r\nexport default Backdrop;\r\n","import React, {Component} from 'react';\r\nimport classes from './Drawer.module.css';\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst links = [\r\n    {to: '/', label: 'Список', exact: true},\r\n    {to: '/auth', label: 'Авторизация', exact: false},\r\n    {to: '/quiz-creator', label: 'Создать тест', exact: false},\r\n];\r\n\r\nexport default class Drawer extends Component {\r\n    clickHandler = () => {\r\n        this.props.onClose();\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const cls = [\r\n            classes.Drawer\r\n        ];\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderLinks() {\r\n        return links.map((link, index) => {\r\n            return (<li key={index}>\r\n                <NavLink\r\n                    to={link.to}\r\n                    exact={link.exact}\r\n                    activeClassName={classes.active}\r\n                    onClick={this.clickHandler}\r\n                >\r\n                    {link.label}\r\n                </NavLink>\r\n            </li>);\r\n        })\r\n    }\r\n};\r\n","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nexport default class Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    };\r\n    menuCloseHandler = () => {\r\n        this.setState({menu: false})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n    const cls = [classes.AnswerItem];\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state]);\r\n    }\r\n\r\n    return (\r\n        <li className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem\r\n                    key={index}\r\n                    answer={answer}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                    onAnswerClick={props.onAnswerClick}/>\r\n            )\r\n        })}\r\n    </ul>\r\n);\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList\r\n                state={props.state}\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ];\r\n\r\n    return (\r\n        <button\r\n            className={cls.join(' ')}\r\n            onClick={props.onClick}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css';\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++;\r\n        }\r\n        return total;\r\n    }, 0);\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ];\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')}/>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to='/'><Button type=\"success\">Перейти в список тестов</Button></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinishedQuiz;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-95a19.firebaseio.com/'\r\n});\r\n","import React from 'react';\r\nimport classes from './Loader.module.css';\r\n\r\nconst Loader = props => (\r\n    <div className={classes.Spinner}>\r\n        <div className={classes.Loader}>\r\n            <div/>\r\n            <div/>\r\n            <div>\r\n                <div/>\r\n            </div>\r\n            <div>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, {Component} from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\nimport Loader from '../../components/UI/Loader/Loader'\n\nclass Quiz extends Component {\n  state = {\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null,\n    quiz: [],\n    loading: true\n  }\n\n  onAnswerClickHandler = answerId => {\n    if (this.state.answerState) {\n      const key = Object.keys(this.state.answerState)[0]\n      if (this.state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = this.state.quiz[this.state.activeQuestion]\n    const results = this.state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      this.setState({\n        answerState: {[answerId]: 'success'},\n        results\n      })\n\n      const timeout = window.setTimeout(() => {\n        if (this.isQuizFinished()) {\n          this.setState({\n            isFinished: true\n          })\n        } else {\n          this.setState({\n            activeQuestion: this.state.activeQuestion + 1,\n            answerState: null\n          })\n        }\n        window.clearTimeout(timeout)\n      }, 1000)\n    } else {\n      results[question.id] = 'error'\n      this.setState({\n        answerState: {[answerId]: 'error'},\n        results\n      })\n    }\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length\n  }\n\n  retryHandler = () => {\n    this.setState({\n      activeQuestion: 0,\n      answerState: null,\n      isFinished: false,\n      results: {}\n    })\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`)\n      const quiz = response.data\n\n      this.setState({\n        quiz,\n        loading: false\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n\n          {\n            this.state.loading\n             ? <Loader />\n             : this.state.isFinished\n              ? <FinishedQuiz\n                results={this.state.results}\n                quiz={this.state.quiz}\n                onRetry={this.retryHandler}\n              />\n              : <ActiveQuiz\n                answers={this.state.quiz[this.state.activeQuestion].answers}\n                question={this.state.quiz[this.state.activeQuestion].question}\n                onAnswerClick={this.onAnswerClickHandler}\n                quizLength={this.state.quiz.length}\n                answerNumber={this.state.activeQuestion + 1}\n                state={this.state.answerState}\n              />\n\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Quiz\n","import axios from '../../axios/axios-quiz';\r\nimport {FETCH_QUIZ_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get('/quizes.json');\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест №${index + 1}`,\r\n                })\r\n            })\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START,\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async (dispatch) => {\r\n        dispatch(fetchQuizesStart())\r\n\r\n        try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`);\r\n            const quiz = response.data;\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e));\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes,\r\n    }\r\n\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e,\r\n    }\r\n}\r\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n","import React, {Component} from 'react';\r\nimport classes from './QuizList.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n\r\n    async componentDidMount() {\r\n        this.props.fetchQuizes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    {\r\n                        this.props.loading && this.props.quizes.length !== 0\r\n                            ? <Loader/>\r\n                            : <ul>\r\n                                {this.renderQuizes()}\r\n                            </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map(quiz => {\r\n            return (\r\n                <li\r\n                    key={quiz.id}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes()),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = props => {\r\n\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input type={inputType}\r\n                   id={htmlFor}\r\n                   value={props.value}\r\n                   onChange={props.onChange}\r\n            />\r\n\r\n            {isInvalid(props)\r\n                ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js';\r\nimport axios from 'axios';\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true,\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = async () => {\r\n        const authData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value,\r\n            returnSecureToken: true,\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB6GFzdixIa1mmvU1bc7CyrZqspqwBkr2E', authData);\r\n            console.log(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    registerHandler = async () => {\r\n        const authData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value,\r\n            returnSecureToken: true,\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB6GFzdixIa1mmvU1bc7CyrZqspqwBkr2E', authData);\r\n            console.log(response.data);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    validateControl = (value, validation) => {\r\n        if (!validation) {\r\n            return true;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid;\r\n        }\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    onChangeHandler = (e, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.value = e.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid;\r\n        });\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={e => this.onChangeHandler(e, controlName)}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form\r\n                        onSubmit={this.submitHandler}\r\n                        className={classes.AuthForm}\r\n                    >\r\n                        {this.renderInputs()}\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;\r\n\r\n\r\n","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    };\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n}\r\n","const Auxiliary = props => props.children;\r\n\r\nexport default Auxiliary;\r\n","import React from 'react';\r\nimport classes from './Select.module.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label} + ${Math.random()}`;\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;\r\n","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css';\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createControl, validate, validateForm} from \"../../form/formFramework\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Auxiliary from \"../../hoc/Auxiliary/Auxiliary\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number,\r\n    }, {required: true,});\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {required: true,}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        quiz: [],\r\n        isFormValid: false,\r\n        formControls: createFormControls(),\r\n        rightAnswerId: 1,\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    addQuestionHandler = e => {\r\n        e.preventDefault();\r\n\r\n        const quiz = this.state.quiz.concat();\r\n        const index = quiz.length + 1;\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: index,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ],\r\n        }\r\n        quiz.push(questionItem);\r\n\r\n        this.setState({\r\n            quiz,\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls(),\r\n        });\r\n    };\r\n\r\n    createQuizHandler = async e => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await axios.post('/quizes.json', this.state.quiz);\r\n            this.setState({\r\n                quiz: [],\r\n                isFormValid: false,\r\n                formControls: createFormControls(),\r\n                rightAnswerId: 1,\r\n            })\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n\r\n        control.touched = true;\r\n        control.value = value;\r\n        control.valid = validate(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    };\r\n\r\n    renderControls() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <Auxiliary key={controlName + index}><Input\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    shouldValidate={!!control.validation}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                />\r\n                    {\r\n                        index === 0 ? <hr/> : null\r\n                    }</Auxiliary>\r\n            );\r\n        });\r\n    }\r\n\r\n    selectChangeHandler = e => {\r\n        this.setState({rightAnswerId: +e.target.value})\r\n    };\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Выберите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4},\r\n            ]}\r\n        />\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n                    <form onSubmit={this.submitHandler}>\r\n                        {this.renderControls()}\r\n                        {select}\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.state.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizCreator;\r\n","import React from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\n\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/auth\" component={Auth}/>\n                <Route path=\"/quiz-creator\" component={QuizCreator}/>\n                <Route path=\"/quiz/:id\" component={Quiz}/>\n                <Route path=\"/\" component={QuizList}/>\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {FETCH_QUIZ_SUCCESS, FETCH_QUIZES_ERROR, FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null,\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quizes: action.quizes,\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error,\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                quiz: action.quiz,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import {combineReducers} from \"redux\";\r\nimport quizReducer from \"./quiz\";\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport {compose, createStore, applyMiddleware} from \"redux\";\nimport {Provider} from 'react-redux';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}